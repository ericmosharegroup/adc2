<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.ericmoshare.adc.mapper.repository.AssetRepository">
    <resultMap id="BaseResultMap" type="com.github.ericmoshare.adc.mapper.entity.Asset">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="asset_id" jdbcType="VARCHAR" property="assetId"/>
        <result column="asset_name" jdbcType="VARCHAR" property="assetName"/>
        <result column="asset_type" jdbcType="VARCHAR" property="assetType"/>
        <result column="account_type" jdbcType="VARCHAR" property="accountType"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, asset_id, asset_name, asset_type, account_type, user_id, remark, create_time, 
    update_time
  </sql>
    <select id="selectByExample" parameterType="com.github.ericmoshare.adc.mapper.entity.AssetExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from asset
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from asset
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from asset
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.github.ericmoshare.adc.mapper.entity.AssetExample">
        delete from asset
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.github.ericmoshare.adc.mapper.entity.Asset">
    insert into asset (id, asset_id, asset_name, 
      asset_type, account_type, user_id, 
      remark, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{assetId,jdbcType=VARCHAR}, #{assetName,jdbcType=VARCHAR}, 
      #{assetType,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.github.ericmoshare.adc.mapper.entity.Asset">
        insert into asset
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="assetId != null">
                asset_id,
            </if>
            <if test="assetName != null">
                asset_name,
            </if>
            <if test="assetType != null">
                asset_type,
            </if>
            <if test="accountType != null">
                account_type,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="assetId != null">
                #{assetId,jdbcType=VARCHAR},
            </if>
            <if test="assetName != null">
                #{assetName,jdbcType=VARCHAR},
            </if>
            <if test="assetType != null">
                #{assetType,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null">
                #{accountType,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.github.ericmoshare.adc.mapper.entity.AssetExample" resultType="java.lang.Integer">
        select count(*) from asset
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update asset
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.assetId != null">
                asset_id = #{record.assetId,jdbcType=VARCHAR},
            </if>
            <if test="record.assetName != null">
                asset_name = #{record.assetName,jdbcType=VARCHAR},
            </if>
            <if test="record.assetType != null">
                asset_type = #{record.assetType,jdbcType=VARCHAR},
            </if>
            <if test="record.accountType != null">
                account_type = #{record.accountType,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update asset
        set id = #{record.id,jdbcType=BIGINT},
        asset_id = #{record.assetId,jdbcType=VARCHAR},
        asset_name = #{record.assetName,jdbcType=VARCHAR},
        asset_type = #{record.assetType,jdbcType=VARCHAR},
        account_type = #{record.accountType,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.ericmoshare.adc.mapper.entity.Asset">
        update asset
        <set>
            <if test="assetId != null">
                asset_id = #{assetId,jdbcType=VARCHAR},
            </if>
            <if test="assetName != null">
                asset_name = #{assetName,jdbcType=VARCHAR},
            </if>
            <if test="assetType != null">
                asset_type = #{assetType,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null">
                account_type = #{accountType,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.ericmoshare.adc.mapper.entity.Asset">
    update asset
    set asset_id = #{assetId,jdbcType=VARCHAR},
      asset_name = #{assetName,jdbcType=VARCHAR},
      asset_type = #{assetType,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>